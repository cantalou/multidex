/*
 * Copyright (C) 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'

android {
    compileSdkVersion _compileSdkVersion
    buildToolsVersion _buildToolVersion

    defaultConfig {
        minSdkVersion 14
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        main {
            java.srcDirs = ['src']
            resources.srcDirs = ['res']
            res.srcDirs = ['src']
            manifest.srcFile 'AndroidManifest.xml'
        }
        androidTest {
            java.srcDirs = ['test']
            manifest.srcFile 'AndroidManifest.xml'
        }
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {
    testCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support.test:runner:1.0.2'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:3.0.2'
}

afterEvaluate {
    project.tasks.findByName("assembleRelease").doLast {
        def classFile = file("build/intermediates/packaged-classes/release/classes.jar")
        if(!classFile.exists()){
            classFile = file("build/intermediates/bundles/default/classes.jar")
        }
        file("outputs").mkdir()
        copy {
            from classFile
            into file("outputs")
            rename "classes", "android-support-multidex"
        }
    }
}
apply from: 'publish.gradle'

